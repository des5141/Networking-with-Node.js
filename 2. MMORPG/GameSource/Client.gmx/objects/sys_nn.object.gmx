<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup
only_single();
status = NN.status_disconnected;

//Message queue
inbox = ds_queue_create();
global.list = ds_list_create();


temp_buffer = "";
reading_length = 0;
read = false;
reading_length_string = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cleanup

//Message queue
ds_queue_destroy(inbox);
ds_list_destroy(global.list);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Receive incoming messages 

if (os_browser == browser_not_a_browser) {
    if (ds_map_find_value(async_load, 'id') == client) {
        if (ds_map_find_value(async_load, 'type') == network_type_data) {
        
            var buffer = ds_map_find_value(async_load, 'buffer');
            var temp = temp_buffer;
            temp += buffer_read(buffer, buffer_string);
            
            var c, check = false;
            
            if(string_pos("®", temp) != 0)
                check = true;
                
            if(check)
            {
                if(global.list &lt; 0)
                    ds_list_clear(global.list)
                else
                    global.list = ds_list_create()
                    
                var index = 0;
                
                while(1)
                {
                    // --------------------------------------------------------
                    if(string_char_at(temp, index+1) == "㏆")
                    {
                        temp_buffer = "";
                        temp = string_delete(temp, 1, index+1);
                        index = -1;
                        read = true;
                    }else if(string_char_at(temp, index+1) == "®")
                    {
                        temp = string_delete(temp, 1, index+1);
                        index = -1;
                        read = false;
                        reading_length = real(reading_length_string);
                        reading_length_string = "";
                    }else{
                        if(read)
                            reading_length_string += string_char_at(temp, index+1);
                        else{
                            if(reading_length != 0)
                            {
                                ds_list_add(global.list, string_copy(temp, 1, reading_length));
                                temp = string_delete(temp, 1, reading_length);
                                reading_length = 0;
                                reading_length_string = "";
                                index = -1;
                                read = false;
                            }
                        }
                        if(index == string_length(temp))or(string_length(temp) == 0){
                            temp_buffer = temp;
                            break;
                        }
                    }
                    index++;
                }
                
                var i;
                for(i = 0; i &lt; ds_list_size(global.list); i++)
                {
                    ds_queue_enqueue(inbox, ds_list_find_value(global.list, i));
                }
            }else{
                temp_buffer = temp;
            }
            
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ENUM
enum NN{
    port = 5833,
    insig_login_refused = 0,
    insig_login_accepted = 1,
    insig_ping = 2,
    insig_user_leave = 3,
    insig_user_join = 4,
    insig_user_position = 5,
    insig_user_space = 6,
    insig_user_map = 7,
    insig_send_obj = 8,
    
    
    outsig_login = 0,
    outsig_ping = 1,
    outsig_user_position = 2,
    outsig_user_space = 3,
    outsig_user_operation = 4,
    outsig_register = 5,
    outsig_user_inventory = 6,
    
    status_disconnected = -1,
    status_connecting = 0,
    status_connected = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
