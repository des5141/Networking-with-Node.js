<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(snd_tick, 0, false)

_x = 0
_y = 0

count = 1

_n = 0

for (n = 0; global.msg[n] != ""; n ++) {
    msg[n] = global.msg[n];
}

current = msg[0]

spd = 5
alarm[0] = spd

talking = 0

end_type = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if(room=room_start){room_goto_next()}
switch(end_type)
{
    case 0:
        break
        
    case 1:
        with(obj_girl1)
        {
            image_speed = 0.2
            obj_player.canmove = true
            xdir = 1
            path_start(npc_path1, 2, 0, 0)
        }
        break
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if count &lt; string_length(current) {
    count ++
    alarm[0] = spd
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check_pressed(vk_enter)) or (keyboard_check_pressed(vk_escape)){
    if talking == 0 {
        count = string_length(current)
    } else if talking == 1 {
        count = 0
        _n = _n + 1
        current = msg[_n]
        talking = 0
        alarm[0] = spd
    } else if (talking == 2){ instance_destroy();}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fnt_text);
draw_set_halign(fa_left);

var a = 0;
if string_char_at(current, count) == "%" a = 1

/*if mouse_y &gt; _y + 120 {
    draw_set_colour(c_white)
    draw_rectangle(_x + 16, _y + 5, _x + 304, _y + 80, false)
    draw_set_colour(c_black)
    draw_rectangle(_x + 19, _y + 8, _x + 301, _y + 77, false)
    draw_set_colour(c_white)
    draw_text(_x + 20, _y + 10, string_copy(current, 1, count - 1 - a))
} else {*/
    draw_set_colour(c_white)
    draw_rectangle(view_xview[0] + 16,view_yview[0] + 160,view_xview[0] + 304,view_yview[0] + 235, false)
    draw_set_colour(c_black)
    draw_rectangle(view_xview[0] + 19,view_yview[0] + 163,view_xview[0] + 301,view_yview[0] + 232, false)
    draw_set_colour(c_white)
    draw_text(view_xview[0] + 23,view_yview[0] + 168, string_copy(current, 1, count - 1 - a))
//}

for (n = 1; n &lt; count + 1; n = n + 1)
    if string_char_at(current, n) = "/" {
        talking = 1
        if string_char_at(current, n + 1) = "%" talking = 2
    }
    if string_char_at(current, n) = "$"
    {
        room_goto_next();
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
