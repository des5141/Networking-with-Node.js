<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create
js_sys_create();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy
js_sys_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (os_browser != browser_not_a_browser) {
    //Update status
    status = html5_status();
    //Fetch messages
    while (html5_has_message()) {
        var buffer = html5_get_message();
            global.check_bytes_recv += buffer_get_size(buffer);
            
            if (global.message_buffer == -1) {
                global.message_buffer = buffer_create(1, buffer_grow, 1);
                buffer_copy(buffer, 0, buffer_get_size(buffer), global.message_buffer, 0);
            } else { buffer_copy(buffer, 0, buffer_get_size(buffer), global.message_buffer, buffer_get_size(global.message_buffer)); }
            
            var get_size = -1;
            while(true) {
                buffer_seek(global.message_buffer, buffer_seek_start, 0);
                get_size = buffer_get_size(global.message_buffer);
                if (get_size &lt; 4)
                    break;
                    
                var buffer_length = buffer_read(global.message_buffer, buffer_u32) - 4;
                
                var temp_buffer = buffer_create(1, buffer_grow, 1);
                buffer_copy(global.message_buffer, buffer_tell(global.message_buffer), buffer_length, temp_buffer, 0);
                ds_queue_enqueue(global.message_processing, temp_buffer);
                
                var temp = buffer_create(1, buffer_grow, 1);
                buffer_copy(global.message_buffer, (buffer_length + 4), get_size - (buffer_length + 4), temp, 0);
                buffer_resize(global.message_buffer, 1);
                buffer_copy(temp, 0, buffer_get_size(temp), global.message_buffer, 0); 
                buffer_delete(temp);
                if(buffer_get_size(global.message_buffer) == 1) {
                    buffer_delete(global.message_buffer);
                    global.message_buffer = -1;
                    break;
                }
            }
            
            while (ds_queue_size(global.message_processing) != 0) {
                if  ( global.master_instance != -1 ) {
                    with(global.master_instance) {
                        recv_buffer = ds_queue_dequeue(global.message_processing);
                        if not(buffer_get_size(recv_buffer) == 1){
                            event_user(0); // Processing
                        }
                        buffer_delete(recv_buffer);
                    }
                }
            }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Networking
js_sys_networking();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
