<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup
status = NN.status_disconnected;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Receive incoming messages
if (ds_map_find_value(async_load, 'id') == client) {
    if (ds_map_find_value(async_load, 'type') == network_type_data) {
        var buffer = ds_map_find_value(async_load, 'buffer');
        global.check_bytes_recv += buffer_get_size(buffer);
        if (global.message_buffer == -1) {
            global.message_buffer = buffer_create(1, buffer_grow, 1);
            buffer_copy(buffer, 0, buffer_get_size(buffer), global.message_buffer, 0);
        }
        else { buffer_copy(buffer, 0, buffer_get_size(buffer), global.message_buffer, buffer_get_size(global.message_buffer)); }
        var index = 0;
        while (true) {
            if (index + 4 &gt; buffer_get_size(global.message_buffer))
                break;
            buffer_seek(global.message_buffer, buffer_seek_start, index);
            if (buffer_read(global.message_buffer, buffer_string) == "ยง") {
                var length = buffer_read(global.message_buffer, buffer_u16) - 3;
                var temp = buffer_create(1, buffer_grow, 1);
                buffer_copy(global.message_buffer, index - length, index, temp, 0);
                ds_queue_enqueue(global.message_processing, temp);
                var temp_buffer = buffer_create(1, buffer_grow, 1);
                buffer_copy(global.message_buffer, 0, buffer_get_size(global.message_buffer), temp_buffer, 0);
                buffer_resize(global.message_buffer, 1);
                buffer_copy(temp_buffer, index + 4, buffer_get_size(temp_buffer), global.message_buffer, 0);
                buffer_delete(temp_buffer);
                index = 0;
                continue;
            }
            index++;
        }
        buffer_delete(buffer);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
